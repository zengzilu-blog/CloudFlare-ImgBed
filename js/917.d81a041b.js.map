{
    "version": 3,
    "file": "js/917.d81a041b.js",
    "mappings": "+QACA,MAAMA,EAAa,CACjBC,MAAO,qBAEHC,EAAa,CAAC,aACdC,EAAa,CACjBF,MAAO,mBAEHG,EAAa,CACjBH,MAAO,uBAEHI,EAAa,CACjBJ,MAAO,oBAEHK,EAAa,CACjBL,MAAO,eAEHM,EAAa,CACjBN,MAAO,gBAEHO,EAAa,CACjBP,MAAO,eAEHQ,EAAa,CACjBR,MAAO,kBAEHS,EAAc,CAClBT,MAAO,aAEHU,EAAc,CAClBV,MAAO,eAEF,SAASW,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMC,GAA+B,QAAkB,qBACjDC,EAAuB,KAC7B,OAAO,WAAc,QAAoB,MAAOpB,EAAY,EAAC,QAAoB,MAAO,CACtFC,MAAO,qBACPoB,UAAWR,EAAKS,0BACf,KAAM,EAAGpB,IAAa,QAAoB,MAAOC,EAAY,EAAC,QAAoB,MAAOC,EAAY,EAAC,QAAagB,EAAsB,CAC1InB,MAAO,cACPsB,QAASL,EAASM,OAClBC,OAAQ,GACRC,KAAM,SACL,CACDC,SAAS,QAAS,IAAM,EAAC,QAAaR,EAA8B,CAClES,KAAM,WAERC,EAAG,GACF,EAAG,CAAC,eAAe,QAAoB,MAAOxB,EAAY,EAAC,QAAoB,MAAOC,EAAY,EAAC,QAAaa,EAA8B,CAC/IS,KAAM,MACN3B,MAAO,cACL,QAAoB,MAAOM,EAAY,EAAC,QAAaY,EAA8B,CACrFS,KAAM,cACN3B,MAAO,4BACC,QAAoB,MAAOO,EAAY,CAACM,EAAO,KAAOA,EAAO,IAAK,QAAoB,KAAM,CACpGb,MAAO,gBACN,WAAY,IAAKa,EAAO,MAAQA,EAAO,KAAM,QAAoB,IAAK,CACvEb,MAAO,sBACN,oBAAqB,IAAKa,EAAO,MAAQA,EAAO,KAAM,QAAoB,IAAK,CAChFb,MAAO,yBACN,6DAA8D,KAAK,QAAoB,MAAOQ,EAAY,EAAC,QAAaW,EAAsB,CAC/IU,KAAM,UACNJ,KAAM,QACNzB,MAAO,yBACPsB,QAASL,EAASM,QACjB,CACDG,SAAS,QAAS,IAAM,EAAC,QAAaR,EAA8B,CAClES,KAAM,OACN3B,MAAO,aACLa,EAAO,KAAOA,EAAO,IAAK,QAAiB,aAC/Ce,EAAG,EACHE,GAAI,CAAC,IACJ,EAAG,CAAC,aAAa,QAAaX,EAAsB,CACrDM,KAAM,QACNzB,MAAO,2BACPsB,QAASL,EAASc,QACjB,CACDL,SAAS,QAAS,IAAM,EAAC,QAAaR,EAA8B,CAClES,KAAM,aACN3B,MAAO,aACLa,EAAO,KAAOA,EAAO,IAAK,QAAiB,aAC/Ce,EAAG,EACHE,GAAI,CAAC,IACJ,EAAG,CAAC,eAAe,QAAoB,MAAOrB,EAAa,CAACI,EAAO,KAAOA,EAAO,IAAK,QAAoB,IAAK,CAChHb,MAAO,aACN,UAAW,KAAK,QAAoB,MAAOU,EAAa,EAAC,QAAoB,IAAK,CACnFsB,KAAM,qBACNV,QAAST,EAAO,KAAOA,EAAO,GAAK,IAAIoB,IAAShB,EAASM,QAAUN,EAASM,UAAUU,IACtFjC,MAAO,cACN,EAAC,QAAakB,EAA8B,CAC7CS,KAAM,qBACJd,EAAO,KAAOA,EAAO,IAAK,QAAiB,cAAc,QAAoB,IAAK,CACpFmB,KAAM,qBACNV,QAAST,EAAO,KAAOA,EAAO,GAAK,IAAIoB,IAAShB,EAASiB,aAAejB,EAASiB,eAAeD,IAChGjC,MAAO,cACN,EAAC,QAAakB,EAA8B,CAC7CS,KAAM,SACJd,EAAO,KAAOA,EAAO,IAAK,QAAiB,cAAc,QAAoB,IAAK,CACpFmB,KAAM,qBACNV,QAAST,EAAO,KAAOA,EAAO,GAAK,IAAIoB,IAAShB,EAASkB,gBAAkBlB,EAASkB,kBAAkBF,IACtGjC,MAAO,cACN,EAAC,QAAakB,EAA8B,CAC7CS,KAAM,oBACJd,EAAO,KAAOA,EAAO,IAAK,QAAiB,iBAAkBA,EAAO,MAAQA,EAAO,KAAM,QAAoB,MAAO,CACtHb,MAAO,cACN,EAAC,QAAoB,IAAK,KAAM,EAAC,QAAiB,iBAAiB,QAAoB,IAAK,CAC7FgC,KAAM,kDACNhC,MAAO,gBACN,2BAA4B,QAASa,EAAO,MAAQA,EAAO,KAAM,QAAmB,0VAAuW,KAChc,C,yCCzGA,GACEuB,KAAM,eACNC,OAAQ,CAACC,EAAA,GACTC,SAAU,KACL,QAAW,CAAC,cAAe,gBAEhC,KAAAC,IACE,IAAAC,GAAQ,CACNC,MAAO,gBACPC,KAAM,CAAC,CACLP,KAAM,SACNQ,QAAS,qBACR,CACDR,KAAM,WACNQ,QAAS,uCACR,CACDC,QAAS,WAGf,EACA,OAAAC,GAEEC,KAAKC,qBAAqB,cAAe,sBAAsB,GAAO,EACxE,EACA,aAAAC,GAEEF,KAAKG,yBACP,EACAC,QAAS,CACP,MAAA5B,GACEwB,KAAKK,QAAQC,KAAK,IACpB,EACA,MAAAtB,GACMuB,OAAOC,QAAQC,OAAS,EAC1BT,KAAKK,QAAQK,IAAI,GAEjBV,KAAKK,QAAQC,KAAK,IAEtB,EACA,WAAAnB,GACEoB,OAAOI,SAASC,QAClB,EACA,cAAAxB,GAEEmB,OAAOM,KAAK,yDAA0D,SACxE,I,UC1CJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASlD,GAAQ,CAAC,YAAY,qBAEzF,O,4GCFA,KACEmD,IAAAA,GACE,MAAO,CACLC,mBAAoB,EACpBC,qBAAsB,EACtBC,mBAAoB,KAEpBC,qBAAsB,KAE1B,EACA3B,SAAU,KACL4B,EAAAA,EAAAA,IAAW,CAAC,aAAc,iBAAkB,gBAC/CC,UAAAA,GACE,OAAOrB,KAAKsB,YAAYD,YAAc,GACxC,EACAE,SAAAA,GACE,OAAOvB,KAAKsB,YAAYC,WAAa,CACvC,EAEAjD,wBAAAA,GACE,MAAO,8JAIT,EAEAkD,sBAAAA,GACE,MAAO,kmBAwBT,GAGFC,MAAO,CAELC,WAAAA,CAAYC,EAAQC,GAEdD,IAAWC,GAAU5B,KAAKmB,sBAC5BnB,KAAK6B,UAAU,KACb7B,KAAK8B,sBACH9B,KAAKmB,qBAAqBY,UAC1B/B,KAAKmB,qBAAqBa,kBAC1BhC,KAAKmB,qBAAqBc,qBAC1BjC,KAAKmB,qBAAqBe,qBAIlC,GAGFnC,OAAAA,GAEEC,KAAKmC,wBACP,EAEAjC,aAAAA,GAEMF,KAAKkB,oBACPkB,cAAcpC,KAAKkB,oBAGrBlB,KAAKqC,uBAAsB,GAE3BrC,KAAKsC,wBACP,EAEAlC,QAAS,CAIP+B,sBAAAA,GACE,MAAMI,EAAU,4BAChB,IAAKC,SAASC,eAAeF,GAAU,CACrC,MAAMG,EAAQF,SAASG,cAAc,SACrCD,EAAME,GAAKL,EACXG,EAAMG,YAAc7C,KAAKwB,uBACzBgB,SAASM,KAAKC,YAAYL,EAC5B,CACF,EAKAJ,sBAAAA,GACE,MAAMC,EAAU,4BACVS,EAAgBR,SAASC,eAAeF,GAC1CS,GACFA,EAAcC,QAElB,EAMAC,wBAAAA,CAAyBC,GACvB,IAAKA,EAEH,YADAC,QAAQC,KAAK,cAKf,GAAIb,SAASC,eAAe,QAAUD,SAASC,eAAe,OAC5D,OAIF,MAAMa,EAAMd,SAASG,cAAc,OACnCW,EAAIV,GAAK,MACTU,EAAIC,UAAY,oBAChBD,EAAIE,IAAM,mBAGV,MAAMC,EAAMjB,SAASG,cAAc,OACnCc,EAAIb,GAAK,MACTa,EAAIF,UAAY,oBAChBE,EAAID,IAAM,mBAGVL,EAAUO,aAAaJ,EAAKH,EAAUQ,YACtCR,EAAUO,aAAaD,EAAKN,EAAUQ,WACxC,EAQA1D,oBAAAA,CAAqB8B,EAAWC,EAAoB,SAAUC,GAAuB,EAAOC,GAAqB,GAU/G,GARAlC,KAAKmB,qBAAuB,CAC1BY,YACAC,oBACAC,uBACAC,sBAIEA,EAAoB,CACtB,MAAMiB,EAAYX,SAASoB,cAAc5B,IACrCmB,GAAeX,SAASC,eAAe,QAAWD,SAASC,eAAe,QAC5EzC,KAAKkD,yBAAyBC,EAElC,CAEA,MAAMG,EAAMd,SAASC,eAAe,OAC9BgB,EAAMjB,SAASC,eAAe,OAEpC,IAAKa,IAAQG,EAEX,YADAL,QAAQC,KAAK,4DAIf,MAAMQ,EAAmB7D,KAAKsB,aAAaS,GAElB,SAArB8B,EACF7D,KAAK8D,mBAAmBR,EAAKG,EAAKzB,GACzB+B,MAAMC,QAAQH,IAAqBA,EAAiBpD,OAAS,EACtET,KAAKiE,6BAA6BX,EAAKG,EAAKI,EAAkB7B,GACrD+B,MAAMC,QAAQH,IAAiD,IAA5BA,EAAiBpD,OAC7DT,KAAKkE,2BAA2BZ,EAAKO,EAAiB,GAAI7B,GACjDC,GACTjC,KAAKmE,sBAAsBb,EAAKtB,EAEpC,EAKA8B,kBAAAA,CAAmBR,EAAKG,EAAKzB,GAC3BhC,KAAKoE,OAAOC,SAAS,uBAAuBC,KAAK,KACZ,IAA/BtE,KAAKuE,eAAe9D,SAExBT,KAAKwE,oBAAoBlB,EAAKtD,KAAKuE,eAAevE,KAAKgB,qBAAqByD,IAAKzC,GAEjFhC,KAAKkB,mBAAqBwD,YAAY,KACpC1E,KAAK2E,oBAAoBrB,EAAKG,IAC7BzD,KAAKqB,cAEZ,EAKA4C,4BAAAA,CAA6BX,EAAKG,EAAKmB,EAAY5C,GACjDhC,KAAKwE,oBAAoBlB,EAAKsB,EAAW5E,KAAKiB,sBAAuBe,GAErEhC,KAAKkB,mBAAqBwD,YAAY,KACpC1E,KAAK6E,sBAAsBvB,EAAKG,EAAKmB,IACpC5E,KAAKqB,WACV,EAKA6C,0BAAAA,CAA2BZ,EAAKwB,EAAc9C,GAC5ChC,KAAKwE,oBAAoBlB,EAAKwB,EAAc9C,EAC9C,EAKAmC,qBAAAA,CAAsBb,EAAKtB,GAEzB,MAAM+C,EAAS/E,KAAK0B,YACdsD,EACFC,EADiBF,EACT,IACA,MAEZ/E,KAAKwE,oBAAoBlB,EAAK0B,EAAchD,EAC9C,EAKAwC,mBAAAA,CAAoBU,EAAYC,EAAUnD,GACxCkD,EAAWE,IAAMD,EACjBD,EAAWG,OAAS,KAClBH,EAAWxC,MAAM4C,QAAUtF,KAAKuB,UAEhC,MAAM4B,EAAYX,SAASoB,cAAc5B,GACrCmB,IACFA,EAAUT,MAAM6C,WAAa,eAGnC,EAKAZ,mBAAAA,CAAoBrB,EAAKG,GACvB,GAAmC,IAA/BzD,KAAKuE,eAAe9D,OAAc,OAEtC,MAAM+E,EAA6B,GAArBlC,EAAIZ,MAAM4C,QAAehC,EAAMG,EACvCgC,EAA8B,GAArBnC,EAAIZ,MAAM4C,QAAe7B,EAAMH,EAE9CkC,EAAM9C,MAAM4C,QAAU,EACtBtF,KAAKgB,oBAAsBhB,KAAKgB,mBAAqB,GAAKhB,KAAKuE,eAAe9D,OAE9EgF,EAAOL,IAAMpF,KAAKuE,eAAevE,KAAKgB,qBAAqByD,IAC3DgB,EAAOJ,OAAS,KACdI,EAAO/C,MAAM4C,QAAUtF,KAAKuB,UAEhC,EAKAsD,qBAAAA,CAAsBvB,EAAKG,EAAKmB,GAC9B,MAAMY,EAA6B,GAArBlC,EAAIZ,MAAM4C,QAAehC,EAAMG,EACvCgC,EAA8B,GAArBnC,EAAIZ,MAAM4C,QAAe7B,EAAMH,EAE9CkC,EAAM9C,MAAM4C,QAAU,EACtBtF,KAAKiB,sBAAwBjB,KAAKiB,qBAAuB,GAAK2D,EAAWnE,OAEzEgF,EAAOL,IAAMR,EAAW5E,KAAKiB,sBAC7BwE,EAAOJ,OAAS,KACdI,EAAO/C,MAAM4C,QAAUtF,KAAKuB,UAEhC,EAKApB,uBAAAA,GACMH,KAAKkB,qBACPkB,cAAcpC,KAAKkB,oBACnBlB,KAAKkB,mBAAqB,KAE9B,EAMAmB,qBAAAA,CAAsBqD,GAAY,GAChC,MAAMpC,EAAMd,SAASC,eAAe,OAC9BgB,EAAMjB,SAASC,eAAe,OAEhCiD,GAEEpC,IACFA,EAAIZ,MAAMiD,WAAa,OACvBrC,EAAIZ,MAAM4C,QAAU,EACpBhC,EAAI8B,IAAM,GAEVQ,WAAW,KACLtC,IAAKA,EAAIZ,MAAMiD,WAAa,8CAC/B,KAEDlC,IACFA,EAAIf,MAAMiD,WAAa,OACvBlC,EAAIf,MAAM4C,QAAU,EACpB7B,EAAI2B,IAAM,GAEVQ,WAAW,KACLnC,IAAKA,EAAIf,MAAMiD,WAAa,8CAC/B,OAIDrC,IACFA,EAAIZ,MAAM4C,QAAU,EACpBM,WAAW,KACLtC,IAAKA,EAAI8B,IAAM,KAClB,MAED3B,IACFA,EAAIf,MAAM4C,QAAU,EACpBM,WAAW,KACLnC,IAAKA,EAAI2B,IAAM,KAClB,MAGT,EASAtD,qBAAAA,CAAsBC,EAAWC,EAAoB,SAAUC,GAAuB,EAAOC,GAAqB,GAChH,MAAM2B,EAAmB7D,KAAKsB,aAAaS,GAG3C,IAAKE,QAA6C4D,IAArBhC,EAE3B,YADA7D,KAAK8F,uBAAuB/D,EAAWC,EAAmBC,EAAsBC,GAKlF,MAAMoB,EAAMd,SAASC,eAAe,OAC9BgB,EAAMjB,SAASC,eAAe,OAEpC,IAAKa,IAAQG,EAGX,YADAzD,KAAK8F,uBAAuB/D,EAAWC,EAAmBC,EAAsBC,GAKlF,MAAM6D,EAAiC,GAArBzC,EAAIZ,MAAM4C,QAAehC,EAAMG,EAC3CgC,EAA8B,GAArBnC,EAAIZ,MAAM4C,QAAe7B,EAAMH,EAGxCyB,EAAS/E,KAAK0B,YACdsE,EACFf,EADkBF,EACV,IACA,MAGNkB,EAAa,IAAIC,MACvBD,EAAWZ,OAAS,KAElBI,EAAOL,IAAMY,EAGbP,EAAOJ,OAAS,KAEdU,EAAUrD,MAAM4C,QAAU,EAG1BM,WAAW,KACTH,EAAO/C,MAAM4C,QAAUtF,KAAKuB,UAG5B,MAAM4B,EAAYX,SAASoB,cAAc5B,GACrCmB,IACFA,EAAUT,MAAM6C,WAAa,gBAE9B,MAIPU,EAAWE,QAAU,KAEnB/C,QAAQC,KAAK,sBACbrD,KAAK8F,uBAAuB/D,EAAWC,EAAmBC,EAAsBC,IAGlF+D,EAAWb,IAAMY,CACnB,EAKAF,sBAAAA,CAAuB/D,EAAWC,EAAoB,SAAUC,GAAuB,EAAOC,GAAqB,GACjHlC,KAAKG,0BACLH,KAAKqC,uBAAsB,GAC3BrC,KAAKgB,mBAAqB,EAC1BhB,KAAKiB,qBAAuB,EAG5B2E,WAAW,KACT5F,KAAKC,qBAAqB8B,EAAWC,EAAmBC,EAAsBC,IAC7E,IACL,G",
    "sources": [
        "webpack://zengzilu_imghub/./src/views/BlockImage.vue?ab20",
        "webpack://zengzilu_imghub/./src/views/BlockImage.vue",
        "webpack://zengzilu_imghub/./src/views/BlockImage.vue?e417",
        "webpack://zengzilu_imghub/./src/mixins/backgroundManager.js"
    ],
    "sourcesContent": [
        "import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"blocked-container\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  class: \"blocked-content\"\n};\nconst _hoisted_4 = {\n  class: \"back-button-wrapper\"\n};\nconst _hoisted_5 = {\n  class: \"status-animation\"\n};\nconst _hoisted_6 = {\n  class: \"status-icon\"\n};\nconst _hoisted_7 = {\n  class: \"status-badge\"\n};\nconst _hoisted_8 = {\n  class: \"status-info\"\n};\nconst _hoisted_9 = {\n  class: \"status-actions\"\n};\nconst _hoisted_10 = {\n  class: \"help-info\"\n};\nconst _hoisted_11 = {\n  class: \"quick-links\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"background-wrapper\",\n    innerHTML: _ctx.backgroundImagesTemplate\n  }, null, 8, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    class: \"back-button\",\n    onClick: $options.goHome,\n    circle: \"\",\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"home\"\n    })]),\n    _: 1\n  }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_font_awesome_icon, {\n    icon: \"ban\",\n    class: \"ban-icon\"\n  }), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_font_awesome_icon, {\n    icon: \"exclamation\",\n    class: \"exclamation-icon\"\n  })])])]), _createElementVNode(\"div\", _hoisted_8, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", {\n    class: \"status-title\"\n  }, \"图片访问被禁止\", -1)), _cache[10] || (_cache[10] = _createElementVNode(\"p\", {\n    class: \"status-description\"\n  }, \" 抱歉，当前图片已被禁止访问。 \", -1)), _cache[11] || (_cache[11] = _createElementVNode(\"p\", {\n    class: \"status-description-en\"\n  }, \" Sorry, current image is prohibited from being accessed. \", -1)), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"large\",\n    class: \"action-btn primary-btn\",\n    onClick: $options.goHome\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"home\",\n      class: \"btn-icon\"\n    }), _cache[3] || (_cache[3] = _createTextVNode(\" 返回首页 \"))]),\n    _: 1,\n    __: [3]\n  }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n    size: \"large\",\n    class: \"action-btn secondary-btn\",\n    onClick: $options.goBack\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"arrow-left\",\n      class: \"btn-icon\"\n    }), _cache[4] || (_cache[4] = _createTextVNode(\" 返回上页 \"))]),\n    _: 1,\n    __: [4]\n  }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_10, [_cache[8] || (_cache[8] = _createElementVNode(\"p\", {\n    class: \"help-text\"\n  }, \"您可以尝试：\", -1)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goHome && $options.goHome(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"cloud-upload-alt\"\n  }), _cache[5] || (_cache[5] = _createTextVNode(\" 图片上传 \"))]), _createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.refreshPage && $options.refreshPage(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"redo\"\n  }), _cache[6] || (_cache[6] = _createTextVNode(\" 刷新页面 \"))]), _createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.contactSupport && $options.contactSupport(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"question-circle\"\n  }), _cache[7] || (_cache[7] = _createTextVNode(\" 联系支持 \"))])])]), _cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    class: \"powered-by\"\n  }, [_createElementVNode(\"p\", null, [_createTextVNode(\"Powered By: \"), _createElementVNode(\"a\", {\n    href: \"https://github.com/zengzilu-blog/CloudFlare-ImgBed\",\n    class: \"project-link\"\n  }, \" CloudFlare-ImgBed \")])], -1))])]), _cache[13] || (_cache[13] = _createStaticVNode(\"<div class=\\\"floating-elements\\\" data-v-76cc7d3a><div class=\\\"floating-shape shape-1\\\" data-v-76cc7d3a></div><div class=\\\"floating-shape shape-2\\\" data-v-76cc7d3a></div><div class=\\\"floating-shape shape-3\\\" data-v-76cc7d3a></div><div class=\\\"floating-shape shape-4\\\" data-v-76cc7d3a></div><div class=\\\"floating-shape shape-5\\\" data-v-76cc7d3a></div></div>\", 1))]);\n}",
        "import \"core-js/modules/es.array.push.js\";\nimport { useHead } from '@vueuse/head';\nimport { mapGetters } from 'vuex';\nimport backgroundManager from '@/mixins/backgroundManager';\nexport default {\n  name: 'BlockedImage',\n  mixins: [backgroundManager],\n  computed: {\n    ...mapGetters(['useDarkMode', 'userConfig'])\n  },\n  setup() {\n    useHead({\n      title: 'Blocked Image',\n      meta: [{\n        name: 'robots',\n        content: 'noindex, nofollow'\n      }, {\n        name: 'viewport',\n        content: 'width=device-width, initial-scale=1'\n      }, {\n        charset: 'UTF-8'\n      }]\n    });\n  },\n  mounted() {\n    // 初始化背景图\n    this.initializeBackground('uploadBkImg', '.blocked-container', false, true);\n  },\n  beforeUnmount() {\n    // 清理背景轮播定时器\n    this.clearBackgroundInterval();\n  },\n  methods: {\n    goHome() {\n      this.$router.push('/');\n    },\n    goBack() {\n      if (window.history.length > 1) {\n        this.$router.go(-1);\n      } else {\n        this.$router.push('/');\n      }\n    },\n    refreshPage() {\n      window.location.reload();\n    },\n    contactSupport() {\n      // 可以实现联系支持的逻辑\n      window.open('https://github.com/zengzilu-blog/CloudFlare-ImgBed/issues', '_blank');\n    }\n  }\n};",
        "/* unplugin-vue-components disabled */import { render } from \"./BlockImage.vue?vue&type=template&id=76cc7d3a&scoped=true\"\nimport script from \"./BlockImage.vue?vue&type=script&lang=js\"\nexport * from \"./BlockImage.vue?vue&type=script&lang=js\"\n\nimport \"./BlockImage.vue?vue&type=style&index=0&id=76cc7d3a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-76cc7d3a\"]])\n\nexport default __exports__",
        "/**\r\n * 背景图管理 Mixin\r\n * 用于统一管理页面背景图的加载和轮播逻辑\r\n */\r\n\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      bingWallPaperIndex: 0,\r\n      customWallPaperIndex: 0,\r\n      backgroundInterval: null, // 存储轮播定时器\r\n      // 存储初始化参数，用于主题切换时重新初始化\r\n      backgroundInitParams: null,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['userConfig', 'bingWallPapers', 'useDarkMode']),\r\n    bkInterval() {\r\n      return this.userConfig?.bkInterval || 3000\r\n    },\r\n    bkOpacity() {\r\n      return this.userConfig?.bkOpacity || 1\r\n    },\r\n    // 提供背景图片元素的模板\r\n    backgroundImagesTemplate() {\r\n      return `\r\n        <img id=\"bg1\" class=\"background-image1\" alt=\"Background Image\"/>\r\n        <img id=\"bg2\" class=\"background-image2\" alt=\"Background Image\"/>\r\n      `\r\n    },\r\n    // 提供背景图片的CSS样式\r\n    backgroundImagesStyles() {\r\n      return `\r\n        .background-image1 {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: cover;\r\n          z-index: -1;\r\n          opacity: 0;\r\n          transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);\r\n        }\r\n        .background-image2 {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: cover;\r\n          z-index: -1;\r\n          opacity: 0;\r\n          transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);\r\n        }\r\n      `\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    // 监听深色模式切换\r\n    useDarkMode(newVal, oldVal) {\r\n      // 只有在值真正改变且已经初始化过背景时才平滑切换主题\r\n      if (newVal !== oldVal && this.backgroundInitParams) {\r\n        this.$nextTick(() => {\r\n          this.smoothThemeTransition(\r\n            this.backgroundInitParams.configKey,\r\n            this.backgroundInitParams.containerSelector,\r\n            this.backgroundInitParams.useDefaultBackground,\r\n            this.backgroundInitParams.autoCreateElements\r\n          )\r\n        })\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    // 动态注入背景图片的CSS样式\r\n    this.injectBackgroundStyles()\r\n  },\r\n\r\n  beforeUnmount() {\r\n    // 组件销毁前清除定时器\r\n    if (this.backgroundInterval) {\r\n      clearInterval(this.backgroundInterval)\r\n    }\r\n    // 立即清除背景图片，不使用过渡效果\r\n    this.clearBackgroundImages(true)\r\n    // 移除动态注入的样式\r\n    this.removeBackgroundStyles()\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 动态注入背景图片样式\r\n     */\r\n    injectBackgroundStyles() {\r\n      const styleId = 'background-manager-styles'\r\n      if (!document.getElementById(styleId)) {\r\n        const style = document.createElement('style')\r\n        style.id = styleId\r\n        style.textContent = this.backgroundImagesStyles\r\n        document.head.appendChild(style)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 移除动态注入的样式\r\n     */\r\n    removeBackgroundStyles() {\r\n      const styleId = 'background-manager-styles'\r\n      const existingStyle = document.getElementById(styleId)\r\n      if (existingStyle) {\r\n        existingStyle.remove()\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 动态创建背景图片元素\r\n     * @param {HTMLElement} container - 要插入背景图片的容器元素\r\n     */\r\n    createBackgroundElements(container) {\r\n      if (!container) {\r\n        console.warn('未提供有效的容器元素')\r\n        return\r\n      }\r\n\r\n      // 检查是否已经存在背景图片元素\r\n      if (document.getElementById('bg1') || document.getElementById('bg2')) {\r\n        return\r\n      }\r\n\r\n      // 创建 bg1 元素\r\n      const bg1 = document.createElement('img')\r\n      bg1.id = 'bg1'\r\n      bg1.className = 'background-image1'\r\n      bg1.alt = 'Background Image'\r\n      \r\n      // 创建 bg2 元素\r\n      const bg2 = document.createElement('img')\r\n      bg2.id = 'bg2'\r\n      bg2.className = 'background-image2'\r\n      bg2.alt = 'Background Image'\r\n\r\n      // 将元素插入到容器的开头\r\n      container.insertBefore(bg1, container.firstChild)\r\n      container.insertBefore(bg2, container.firstChild)\r\n    },\r\n    /**\r\n     * 初始化背景图\r\n     * @param {string} configKey - 用户配置中的背景图配置键名\r\n     * @param {string} containerSelector - 容器选择器，用于设置透明背景\r\n     * @param {boolean} useDefaultBackground - 是否使用默认背景图\r\n     * @param {boolean} autoCreateElements - 是否自动创建背景元素\r\n     */\r\n    initializeBackground(configKey, containerSelector = '.login', useDefaultBackground = false, autoCreateElements = false) {\r\n      // 保存初始化参数，用于主题切换时重新初始化\r\n      this.backgroundInitParams = {\r\n        configKey,\r\n        containerSelector,\r\n        useDefaultBackground,\r\n        autoCreateElements\r\n      }\r\n\r\n      // 如果需要自动创建元素且元素不存在，则创建\r\n      if (autoCreateElements) {\r\n        const container = document.querySelector(containerSelector)\r\n        if (container && (!document.getElementById('bg1') || !document.getElementById('bg2'))) {\r\n          this.createBackgroundElements(container)\r\n        }\r\n      }\r\n\r\n      const bg1 = document.getElementById('bg1')\r\n      const bg2 = document.getElementById('bg2')\r\n      \r\n      if (!bg1 || !bg2) {\r\n        console.warn('背景图元素 #bg1 或 #bg2 未找到，请确保页面中包含这些元素或启用 autoCreateElements')\r\n        return\r\n      }\r\n\r\n      const backgroundConfig = this.userConfig?.[configKey]\r\n\r\n      if (backgroundConfig === 'bing') {\r\n        this.setupBingWallpaper(bg1, bg2, containerSelector)\r\n      } else if (Array.isArray(backgroundConfig) && backgroundConfig.length > 1) {\r\n        this.setupCustomWallpaperCarousel(bg1, bg2, backgroundConfig, containerSelector)\r\n      } else if (Array.isArray(backgroundConfig) && backgroundConfig.length === 1) {\r\n        this.setupSingleCustomWallpaper(bg1, backgroundConfig[0], containerSelector)\r\n      } else if (useDefaultBackground) {\r\n        this.setupDefaultWallpaper(bg1, containerSelector)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 设置 Bing 壁纸轮播\r\n     */\r\n    setupBingWallpaper(bg1, bg2, containerSelector) {\r\n      this.$store.dispatch('fetchBingWallPapers').then(() => {\r\n        if (this.bingWallPapers.length === 0) return\r\n\r\n        this.loadBackgroundImage(bg1, this.bingWallPapers[this.bingWallPaperIndex]?.url, containerSelector)\r\n        \r\n        this.backgroundInterval = setInterval(() => {\r\n          this.switchBingWallpaper(bg1, bg2)\r\n        }, this.bkInterval)\r\n      })\r\n    },\r\n\r\n    /**\r\n     * 设置自定义壁纸轮播\r\n     */\r\n    setupCustomWallpaperCarousel(bg1, bg2, wallpapers, containerSelector) {\r\n      this.loadBackgroundImage(bg1, wallpapers[this.customWallPaperIndex], containerSelector)\r\n      \r\n      this.backgroundInterval = setInterval(() => {\r\n        this.switchCustomWallpaper(bg1, bg2, wallpapers)\r\n      }, this.bkInterval)\r\n    },\r\n\r\n    /**\r\n     * 设置单张自定义壁纸\r\n     */\r\n    setupSingleCustomWallpaper(bg1, wallpaperUrl, containerSelector) {\r\n      this.loadBackgroundImage(bg1, wallpaperUrl, containerSelector)\r\n    },\r\n\r\n    /**\r\n     * 设置默认壁纸\r\n     */\r\n    setupDefaultWallpaper(bg1, containerSelector) {\r\n      // 根据当前深色模式状态选择背景图\r\n      const isDark = this.useDarkMode\r\n      const defaultImage = isDark \r\n        ? require('@/assets/background.jpg') \r\n        : require('@/assets/background-light.jpg')\r\n      \r\n      this.loadBackgroundImage(bg1, defaultImage, containerSelector)\r\n    },\r\n\r\n    /**\r\n     * 加载背景图片\r\n     */\r\n    loadBackgroundImage(imgElement, imageSrc, containerSelector) {\r\n      imgElement.src = imageSrc\r\n      imgElement.onload = () => {\r\n        imgElement.style.opacity = this.bkOpacity\r\n        // 设置容器背景为透明\r\n        const container = document.querySelector(containerSelector)\r\n        if (container) {\r\n          container.style.background = 'transparent'\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 切换 Bing 壁纸\r\n     */\r\n    switchBingWallpaper(bg1, bg2) {\r\n      if (this.bingWallPapers.length === 0) return\r\n\r\n      const curBg = bg1.style.opacity != 0 ? bg1 : bg2\r\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1\r\n      \r\n      curBg.style.opacity = 0\r\n      this.bingWallPaperIndex = (this.bingWallPaperIndex + 1) % this.bingWallPapers.length\r\n      \r\n      nextBg.src = this.bingWallPapers[this.bingWallPaperIndex]?.url\r\n      nextBg.onload = () => {\r\n        nextBg.style.opacity = this.bkOpacity\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 切换自定义壁纸\r\n     */\r\n    switchCustomWallpaper(bg1, bg2, wallpapers) {\r\n      const curBg = bg1.style.opacity != 0 ? bg1 : bg2\r\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1\r\n      \r\n      curBg.style.opacity = 0\r\n      this.customWallPaperIndex = (this.customWallPaperIndex + 1) % wallpapers.length\r\n      \r\n      nextBg.src = wallpapers[this.customWallPaperIndex]\r\n      nextBg.onload = () => {\r\n        nextBg.style.opacity = this.bkOpacity\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 清除背景轮播定时器\r\n     */\r\n    clearBackgroundInterval() {\r\n      if (this.backgroundInterval) {\r\n        clearInterval(this.backgroundInterval)\r\n        this.backgroundInterval = null\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 清除背景图片显示（带过渡效果）\r\n     * @param {boolean} immediate - 是否立即清除，不使用过渡效果\r\n     */\r\n    clearBackgroundImages(immediate = false) {\r\n      const bg1 = document.getElementById('bg1')\r\n      const bg2 = document.getElementById('bg2')\r\n      \r\n      if (immediate) {\r\n        // 立即清除，不使用过渡效果\r\n        if (bg1) {\r\n          bg1.style.transition = 'none'\r\n          bg1.style.opacity = 0\r\n          bg1.src = ''\r\n          // 恢复过渡效果\r\n          setTimeout(() => {\r\n            if (bg1) bg1.style.transition = 'opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1)'\r\n          }, 50)\r\n        }\r\n        if (bg2) {\r\n          bg2.style.transition = 'none'\r\n          bg2.style.opacity = 0\r\n          bg2.src = ''\r\n          // 恢复过渡效果\r\n          setTimeout(() => {\r\n            if (bg2) bg2.style.transition = 'opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1)'\r\n          }, 50)\r\n        }\r\n      } else {\r\n        // 使用过渡效果淡出\r\n        if (bg1) {\r\n          bg1.style.opacity = 0\r\n          setTimeout(() => {\r\n            if (bg1) bg1.src = ''\r\n          }, 800) // 等待过渡完成后清除src\r\n        }\r\n        if (bg2) {\r\n          bg2.style.opacity = 0\r\n          setTimeout(() => {\r\n            if (bg2) bg2.src = ''\r\n          }, 800) // 等待过渡完成后清除src\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 平滑主题切换（用于响应主题模式变化）\r\n     * @param {string} configKey - 用户配置中的背景图配置键名\r\n     * @param {string} containerSelector - 容器选择器\r\n     * @param {boolean} useDefaultBackground - 是否使用默认背景图\r\n     * @param {boolean} autoCreateElements - 是否自动创建背景元素\r\n     */\r\n    smoothThemeTransition(configKey, containerSelector = '.login', useDefaultBackground = false, autoCreateElements = false) {\r\n      const backgroundConfig = this.userConfig?.[configKey]\r\n      \r\n      // 如果不是默认背景配置，则直接重新初始化（自定义背景不受主题影响）\r\n      if (!useDefaultBackground || backgroundConfig !== undefined) {\r\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground, autoCreateElements)\r\n        return\r\n      }\r\n\r\n      // 对于默认背景，执行平滑过渡\r\n      const bg1 = document.getElementById('bg1')\r\n      const bg2 = document.getElementById('bg2')\r\n      \r\n      if (!bg1 || !bg2) {\r\n        // 如果背景元素不存在，直接重新初始化\r\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground, autoCreateElements)\r\n        return\r\n      }\r\n\r\n      // 确定当前显示的背景和下一个背景\r\n      const currentBg = bg1.style.opacity != 0 ? bg1 : bg2\r\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1\r\n\r\n      // 获取新主题对应的背景图\r\n      const isDark = this.useDarkMode\r\n      const newThemeImage = isDark \r\n        ? require('@/assets/background.jpg') \r\n        : require('@/assets/background-light.jpg')\r\n\r\n      // 预加载新背景图\r\n      const preloadImg = new Image()\r\n      preloadImg.onload = () => {\r\n        // 设置下一个背景的图片源\r\n        nextBg.src = newThemeImage\r\n        \r\n        // 等待图片加载完成后执行淡入淡出过渡\r\n        nextBg.onload = () => {\r\n          // 淡出当前背景\r\n          currentBg.style.opacity = 0\r\n          \r\n          // 稍微延迟后淡入新背景，确保过渡效果平滑\r\n          setTimeout(() => {\r\n            nextBg.style.opacity = this.bkOpacity\r\n            \r\n            // 设置容器背景为透明\r\n            const container = document.querySelector(containerSelector)\r\n            if (container) {\r\n              container.style.background = 'transparent'\r\n            }\r\n          }, 50) // 50ms 延迟，让淡出效果先开始\r\n        }\r\n      }\r\n      \r\n      preloadImg.onerror = () => {\r\n        // 如果预加载失败，回退到直接重新初始化\r\n        console.warn('主题背景图预加载失败，回退到直接切换')\r\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground, autoCreateElements)\r\n      }\r\n      \r\n      preloadImg.src = newThemeImage\r\n    },\r\n\r\n    /**\r\n     * 重新初始化背景图（用于响应配置变化）\r\n     */\r\n    reinitializeBackground(configKey, containerSelector = '.login', useDefaultBackground = false, autoCreateElements = false) {\r\n      this.clearBackgroundInterval()\r\n      this.clearBackgroundImages(true) // 使用立即清除\r\n      this.bingWallPaperIndex = 0\r\n      this.customWallPaperIndex = 0\r\n      \r\n      // 延迟一小段时间确保清理完成\r\n      setTimeout(() => {\r\n        this.initializeBackground(configKey, containerSelector, useDefaultBackground, autoCreateElements)\r\n      }, 100)\r\n    }\r\n  }\r\n}\r\n"
    ],
    "names": [
        "_hoisted_1",
        "class",
        "_hoisted_2",
        "_hoisted_3",
        "_hoisted_4",
        "_hoisted_5",
        "_hoisted_6",
        "_hoisted_7",
        "_hoisted_8",
        "_hoisted_9",
        "_hoisted_10",
        "_hoisted_11",
        "render",
        "_ctx",
        "_cache",
        "$props",
        "$setup",
        "$data",
        "$options",
        "_component_font_awesome_icon",
        "_component_el_button",
        "innerHTML",
        "backgroundImagesTemplate",
        "onClick",
        "goHome",
        "circle",
        "size",
        "default",
        "icon",
        "_",
        "type",
        "__",
        "goBack",
        "href",
        "args",
        "refreshPage",
        "contactSupport",
        "name",
        "mixins",
        "backgroundManager",
        "computed",
        "setup",
        "u",
        "title",
        "meta",
        "content",
        "charset",
        "mounted",
        "this",
        "initializeBackground",
        "beforeUnmount",
        "clearBackgroundInterval",
        "methods",
        "$router",
        "push",
        "window",
        "history",
        "length",
        "go",
        "location",
        "reload",
        "open",
        "__exports__",
        "data",
        "bingWallPaperIndex",
        "customWallPaperIndex",
        "backgroundInterval",
        "backgroundInitParams",
        "mapGetters",
        "bkInterval",
        "userConfig",
        "bkOpacity",
        "backgroundImagesStyles",
        "watch",
        "useDarkMode",
        "newVal",
        "oldVal",
        "$nextTick",
        "smoothThemeTransition",
        "configKey",
        "containerSelector",
        "useDefaultBackground",
        "autoCreateElements",
        "injectBackgroundStyles",
        "clearInterval",
        "clearBackgroundImages",
        "removeBackgroundStyles",
        "styleId",
        "document",
        "getElementById",
        "style",
        "createElement",
        "id",
        "textContent",
        "head",
        "appendChild",
        "existingStyle",
        "remove",
        "createBackgroundElements",
        "container",
        "console",
        "warn",
        "bg1",
        "className",
        "alt",
        "bg2",
        "insertBefore",
        "firstChild",
        "querySelector",
        "backgroundConfig",
        "setupBingWallpaper",
        "Array",
        "isArray",
        "setupCustomWallpaperCarousel",
        "setupSingleCustomWallpaper",
        "setupDefaultWallpaper",
        "$store",
        "dispatch",
        "then",
        "bingWallPapers",
        "loadBackgroundImage",
        "url",
        "setInterval",
        "switchBingWallpaper",
        "wallpapers",
        "switchCustomWallpaper",
        "wallpaperUrl",
        "isDark",
        "defaultImage",
        "require",
        "imgElement",
        "imageSrc",
        "src",
        "onload",
        "opacity",
        "background",
        "curBg",
        "nextBg",
        "immediate",
        "transition",
        "setTimeout",
        "undefined",
        "reinitializeBackground",
        "currentBg",
        "newThemeImage",
        "preloadImg",
        "Image",
        "onerror"
    ],
    "sourceRoot": ""
}